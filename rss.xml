<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Danilo Del Busso's Dev Portfolio]]></title><description><![CDATA[Danilo Del Busso's Dev Blog & Portfolio]]></description><link>https://www.danilo-delbusso.me</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 10 Aug 2020 13:28:15 GMT</lastBuildDate><item><title><![CDATA[Level Up Your Github Profile Page in 3 Easy Steps]]></title><description><![CDATA[Add a custom .gif to your profile to give it a bit of a buzz]]></description><link>https://www.danilo-delbusso.me/how-to-pimp-your-github-in-three-steps/</link><guid isPermaLink="false">https://www.danilo-delbusso.me/how-to-pimp-your-github-in-three-steps/</guid><pubDate>Thu, 09 Jul 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/level-up-your-github-profile-page-in-three-easy-steps-7fz3et3&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&lt;strong&gt;READ IT ON HACKERNOON 📰⌚&lt;/strong&gt;&lt;/a&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Whether you’re looking for a new position and want to stand out or you just like to make cool things, GitHub offers you the tools to get your own customised welcome message, like this&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danilo-delbusso/blog/master/content/blog/how-to-pimp-your-github-in-three-steps/github.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;The message is surprisingly easy to set up and it’s only limited by your imagination.&lt;/p&gt;
&lt;p&gt;I will go through what I did to create mine and how you can replicate it.&lt;/p&gt;
&lt;h2&gt;1. Create a repository named after you&lt;/h2&gt;
&lt;p&gt;The first step is to create a &lt;a href=&quot;https://github.com/new&quot; title=&quot;https://github.com/new&quot;&gt;new repository&lt;/a&gt; that is named after your GitHub username.&lt;/p&gt;
&lt;p&gt;You will see this message confirming that you are creating the special repository needed for this tutorial.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danilo-delbusso/blog/master/content/blog/how-to-pimp-your-github-in-three-steps/github-message.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;2. Create your animated GIF&lt;/h2&gt;
&lt;p&gt;Here is where your creativity can shine. I suggest you make a GIF which will show on your profile page.&lt;/p&gt;
&lt;p&gt;You can create whatever you want. What I have found easiest is to design a quick HTML page with a welcome text and some CSS animations.&lt;/p&gt;
&lt;p&gt;I used &lt;a href=&quot;https://animista.net/&quot; title=&quot;https://animista.net/&quot;&gt;Animista&lt;/a&gt; for my CSS animations.&lt;/p&gt;
&lt;p&gt;Once you have built your webpage (you can check out the code for mine &lt;a href=&quot;https://github.com/danilo-delbusso/danilo-delbusso/tree/master/html-animation&quot; title=&quot;https://github.com/danilo-delbusso/danilo-delbusso/tree/master/html-animation&quot;&gt;here&lt;/a&gt;), you are ready to create your GIF.&lt;/p&gt;
&lt;p&gt;Download a screen-to-gif recording app and record your animations. I suggest to use &lt;a href=&quot;https://github.com/phw/peek&quot; title=&quot;https://github.com/phw/peek&quot;&gt;peek&lt;/a&gt; or &lt;a href=&quot;https://www.screentogif.com/&quot; title=&quot;https://www.screentogif.com/&quot;&gt;ScreenToGif&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Remember to keep recording for at least 30 seconds after the animations are completed, to avoid looping.&lt;/p&gt;
&lt;h2&gt;3. Add the GIF to your profile&lt;/h2&gt;
&lt;p&gt;Once you’re satisfied with your welcome message GIF, you are ready to add it to your profile page.&lt;/p&gt;
&lt;p&gt;Upload the GIF to the repository that you created in step 1 and modify the README.md file to include your welcome message.&lt;/p&gt;
&lt;p&gt;There are a couple of ways to do so. You can either add the GIF by referencing it as an absolute path like so:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token url&quot;&gt;![&lt;span class=&quot;token content&quot;&gt;Alt Text&lt;/span&gt;](https://media.giphy.com/media/Ju7l5y9osyymQ/giphy.gif)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use some HTML to achieve the same result.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;https://path/to/animation.gif&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;💡PRO TIP: you can wrap this &lt;code class=&quot;language-text&quot;&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; tag in a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag to make it a button!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For more GIF customisation you can check out this &lt;a href=&quot;https://gist.github.com/uupaa/f77d2bcf4dc7a294d109&quot; title=&quot;https://gist.github.com/uupaa/f77d2bcf4dc7a294d109&quot;&gt;flavoured markdown GIF tutorial&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;p&gt;Finally, commit your README.md and share it with everyone who will click!&lt;/p&gt;
&lt;p&gt;You can find my repository &lt;a href=&quot;https://github.com/danilo-delbusso/danilo-delbusso&quot; title=&quot;https://github.com/danilo-delbusso/danilo-delbusso&quot;&gt;here&lt;/a&gt;, with the HTML to generate a welcome message like mine.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Binding Controls With Oracle Database using MVVM Design Pattern in ASP.NET]]></title><description><![CDATA[How to create ASP.NET controls that bind data from an Oracle Database using MVVM]]></description><link>https://www.danilo-delbusso.me/binding-controls-with-database-using-MVVM/</link><guid isPermaLink="false">https://www.danilo-delbusso.me/binding-controls-with-database-using-MVVM/</guid><pubDate>Fri, 03 Jul 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel&quot;&gt;MVVM&lt;/a&gt; is a popular design pattern amongst .NET developers to achieve a clear separation of concerns and facilitate test driven development (TDD).&lt;/p&gt;
&lt;p&gt;While MVVM is mainly used together with really powerful databinding mechanisms (like the ones in &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Presentation_Foundation&quot;&gt;WPF&lt;/a&gt;), it is possible to use it and take advantage of it while developing for the web.&lt;/p&gt;
&lt;p&gt;This may be useful in teams that support different kinds of applications using the .NET framework, that do not want to use multiple design patterns.&lt;/p&gt;
&lt;h2&gt;Create a ASP.NET control using MVVM&lt;/h2&gt;
&lt;p&gt;For the purposes of this tutorial, we will only explore how to bind and update a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;asp:DropDownList/&amp;gt;&lt;/code&gt; to a Oracle Database, using an &lt;code class=&quot;language-text&quot;&gt;&amp;lt;asp:ObjectDataSource /&amp;gt;&lt;/code&gt; object for data binding and update.&lt;/p&gt;
&lt;p&gt;This approach will work with any other databound controls and is therefore quite flexible.&lt;/p&gt;
&lt;h3&gt;The Data Layer (Binder)&lt;/h3&gt;
&lt;p&gt;We will be fetching data using the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.data.oledb?view=dotnet-plat-ext-3.1&quot;&gt;OLE DB&lt;/a&gt; Data Provider.&lt;/p&gt;
&lt;p&gt;Our query will return a &lt;code class=&quot;language-text&quot;&gt;DataTable&lt;/code&gt; object in this format:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ID&lt;/th&gt;
&lt;th&gt;NAME&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;London&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Rome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;New York&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br/&gt;
&lt;p&gt;Let’s add it to our &lt;code class=&quot;language-text&quot;&gt;PageDL.cs&lt;/code&gt; file in the &lt;code class=&quot;language-text&quot;&gt;Project.DL&lt;/code&gt; namespace:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Project&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;DL&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PageDL&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; ConnectionString &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;PageDL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; connectionString&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            ConnectionString &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; connectionString&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;we will be adding a &lt;code class=&quot;language-text&quot;&gt;GetDropDownData()&lt;/code&gt; method which will return the data as such:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;DataTable&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetDropDownData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;@&quot;SELECT ID, NAME FROM TABLE_NAME&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; table &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;DataTable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; conn &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;OleDbConnection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ConnectionString&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                    conn&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; cmd &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;OleDbCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;query&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; conn&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; reader &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cmd&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ExecuteReader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                            table&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;reader&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token comment&quot;&gt;//error logging here&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; table&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;The Business Logic (View Model)&lt;/h3&gt;
&lt;p&gt;Now we just need to add a small method to the View Model which will be called by the View.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Project&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;BL&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PageBL&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PageDL&lt;/span&gt; _dataLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;PageBL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PageDL&lt;/span&gt; dataLayer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            _dataLayer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; dataLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;DataTable&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetDropDownData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; _dataLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetDropDownData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;The View&lt;/h3&gt;
&lt;p&gt;Now on to the juciest part. We will create a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;asp:DropDownList /&amp;gt;&lt;/code&gt; control and bind it to an instance of &lt;code class=&quot;language-text&quot;&gt;PageBL.cs&lt;/code&gt; via a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;asp:ObjectDataSource /&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Connect the View with its View Model&lt;/h4&gt;
&lt;p&gt;In &lt;code class=&quot;language-text&quot;&gt;Page.aspx.cs&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Project&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token type-list&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Web&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UI&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Page&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt; connectionString &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ConfigurationManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ConnectionStrings&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CS&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ConnectionString&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PageBL&lt;/span&gt; businessLogic&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PageDL&lt;/span&gt; dataLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Page_Init&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;object&lt;/span&gt;&lt;/span&gt; sender&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;EventArgs&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            dataLayer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;PageDL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;connectionString&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            businessLogic &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;PageBL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dataLayer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let’s add the &lt;code class=&quot;language-text&quot;&gt;&amp;lt;asp:ObjectDataSource /&amp;gt;&lt;/code&gt; to the &lt;code class=&quot;language-text&quot;&gt;Page.aspx&lt;/code&gt; file&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;xml&quot;&gt;&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token namespace&quot;&gt;asp:&lt;/span&gt;ObjectDataSource&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;runat&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;server&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token attr-name&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;odsDDL&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token attr-name&quot;&gt;SelectMethod&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;GetDropDownData&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token attr-name&quot;&gt;TypeName&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Projet.BL.ProjectBL&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token attr-name&quot;&gt;OnObjectCreating&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;odsDDL_ObjectCreating&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;              
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;token namespace&quot;&gt;asp:&lt;/span&gt;ObjectDataSource&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the &lt;code class=&quot;language-text&quot;&gt;OnObjectCreating&lt;/code&gt; method is called, we will be assigning an instanciated object of &lt;code class=&quot;language-text&quot;&gt;PageBL&lt;/code&gt; so that the View can call the View Model object.&lt;/p&gt;
&lt;p&gt;To do so we add the event method to &lt;code class=&quot;language-text&quot;&gt;Page.aspx.cs&lt;/code&gt; like so:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot;&gt;&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt; &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;odsDDL_ObjectCreating&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;object&lt;/span&gt;&lt;/span&gt; sender&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ObjectDataSourceEventArgs&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ObjectInstance &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; businessLogic&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Bind the Control&lt;/h4&gt;
&lt;p&gt;We can now bind the &lt;code class=&quot;language-text&quot;&gt;&amp;lt;asp:DropDownList /&amp;gt;&lt;/code&gt; control to the ViewModel and populate it using the MVVM pattern.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;xml&quot;&gt;&lt;pre class=&quot;language-xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token namespace&quot;&gt;asp:&lt;/span&gt;DropDownList&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;runat&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;server&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; 
                &lt;span class=&quot;token attr-name&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ddl&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token attr-name&quot;&gt;DataSourceID&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;odsDDL&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token attr-name&quot;&gt;DataTextField&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;NAME&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                &lt;span class=&quot;token attr-name&quot;&gt;DataValueField&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ID&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;token namespace&quot;&gt;asp:&lt;/span&gt;DropDownList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can find the source code &lt;a href=&quot;https://github.com/danilo-delbusso/blog/blob/master/content/blog/binding-controls-with-database-using-MVVM/source&quot;&gt;HERE&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Italy Launches Contact Tracing App; Proves We Shouldn't Compromise On Privacy?]]></title><description><![CDATA[Immuni is safe, and private. The Italian government is showing the world how data privacy can be achieved by any entity]]></description><link>https://www.danilo-delbusso.me/covid-app-shows-governemnt-dont-need-compromise/</link><guid isPermaLink="false">https://www.danilo-delbusso.me/covid-app-shows-governemnt-dont-need-compromise/</guid><pubDate>Wed, 17 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/italy-launches-contact-tracing-app-proves-we-shouldnt-compromise-on-privacy-u24a3upp&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&lt;strong&gt;READ IT ON HACKERNOON 📰⌚&lt;/strong&gt;&lt;/a&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danilo-delbusso/blog/master/content/blog/covid-app-shows-governemnt-dont-need-compromise/covid-article.jpg&quot;&gt;
Starting on the 15th of June, the Italian Government enabled nationwide downloads of their Contact Tracing app, &lt;a href=&quot;https://www.immuni.italia.it/&quot; title=&quot;https://www.immuni.italia.it/&quot;&gt;Immuni&lt;/a&gt;. The app allows for effortless tracing of SARS-Cov-2 virus.&lt;/p&gt;
&lt;p&gt;Though built in less than two months under heavy government guidance and scrutiny, it has been praised for its security and data protection policies.&lt;/p&gt;
&lt;p&gt;As its approach to critical design decisions is likely to be replicated in the future by other governments, it is worthwhile to dig deeper and analyse how the app works and how it protects the user from attacks and government officials.&lt;/p&gt;
&lt;h2&gt;How it works&lt;/h2&gt;
&lt;p&gt;Immuni is based on a version of the Bluetooth wireless data transmission technology (BLE), like that which allows a pair of wireless headphones to connect to their smartphone and which Apple and Google have unlocked in their operating systems, making it accessible even for a different and unimaginable purpose before the pandemic, including contact tracing.&lt;/p&gt;
&lt;p&gt;After downloading and starting it, Immuni does not require user interaction that goes beyond enabling system-wide Bluetooth connectivity. The application generates an alphanumeric key daily from which it produces an identification code, which is then broadcast by the smartphone via Bluetooth for about 15 minutes. Upon expiry of the ID, Immuni generates a new one, always linked to the same key known only to the application. In this way, it becomes practically impossible for an attacker to trace from an ID to a specific smartphone.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danilo-delbusso/blog/master/content/blog/covid-app-shows-governemnt-dont-need-compromise/covid-19-app-1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Smartphones with Immuni that come into each other’s vicinity exchange IDs and record the information exclusively in their memory, without any external exchange of data. With an excellent approximation, the app also calculates the distance and time between enabled devices to estimate if the proximity to a person who turned out to be positive was sufficient for infection.&lt;/p&gt;
&lt;h2&gt;Main Data Privacy Concerns and Solutions&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/immuni-app/immuni-documentation&quot; title=&quot;https://github.com/immuni-app/immuni-documentation&quot;&gt;official documentation&lt;/a&gt; extensively covers the security measures put in place by the developers. Some of the main issues faced by the team are however more relevant to this type of application.&lt;/p&gt;
&lt;h2&gt;Packet Sniffing&lt;/h2&gt;
&lt;p&gt;Passive analysis of network traffic could allow a potential attacker to identify infected individuals if the app communicates with the back-end only when flagging a user as having contracted the virus, or by inferring user information for packet size discrepancies.&lt;/p&gt;
&lt;p&gt;The solution adopted by Immuni is to send periodic fake data to the server, “dummy data”, which is mixed with genuine data. The server manages this data with a pattern equal to that used for non-dummy uploads.&lt;/p&gt;
&lt;p&gt;Fake contagion data has the same size and structure as the valid one, and the server, even when it discards it, returns an answer with a non-zero time which is identical to the one it returns for the valid data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/danilo-delbusso/blog/master/content/blog/covid-app-shows-governemnt-dont-need-compromise/covid-19-app-2.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Exposure Notifications&lt;/h2&gt;
&lt;p&gt;Exposure Notifications are implemented at Google Play Services level. This ensures the exchange of Bluetooth packets when the app isn’t active. However, that app wakes up periodically to check the data it’s received and potentially warn the user. For this Immuni uses WorkManager which, thanks to a local database, guarantees the correct execution of these periodic tasks.&lt;/p&gt;
&lt;p&gt;However, as one of the developers pointed out in an &lt;a href=&quot;https://www.reddit.com/r/italy/comments/h9c53o/siamo_bending_spoons_e_abbiamo_sviluppato_lapp/&quot; title=&quot;https://www.reddit.com/r/italy/comments/h9c53o/siamo_bending_spoons_e_abbiamo_sviluppato_lapp/&quot;&gt;AMAA on Reddit&lt;/a&gt; (in Italian):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Despite all these precautions, some models of Android devices adopt task management policies in the background that could compromise the execution of the aforementioned tasks. Google and various manufacturers are working to resolve the problem and therefore [we are] optimistic that this issue will be addressed soon.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Avoiding Service Disruption or Alteration&lt;/h2&gt;
&lt;p&gt;Immuni signs the cryptographic keys it downloads from its Exposure Reporting Service using a signature algorithm.&lt;/p&gt;
&lt;p&gt;The associated public keys are shared with Apple and Google and are used by mobile devices to verify the downloaded data and to ensure its authenticity and integrity.&lt;/p&gt;
&lt;p&gt;Analytics of epidemiological information is also a potential issue as they are key for guiding the response of the Italian National Healthcare System. Immuni seeks to guarantee the integrity of the data it stores while applying measures to preserve user privacy. Since on Android no technology identifies genuine devices without compromising user privacy, only iPhone devices connect to the Analytics Service via the &lt;a href=&quot;https://developer.apple.com/documentation/devicecheck&quot; title=&quot;https://developer.apple.com/documentation/devicecheck&quot;&gt;DeviceCheck framework&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;When first announced, the app gained considerable traction from the press: the idea of contact tracing seemed promising, but raised many doubts on the topic of the protection of personal data. The Italian public opinion shifted towards discarding an option that would mimic the intrusive South Korean architecture.&lt;/p&gt;
&lt;p&gt;The Government has already provided important reassurances on its website and committed early on in releasing the source code on &lt;a href=&quot;https://github.com/immuni-app&quot; title=&quot;https://github.com/immuni-app&quot;&gt;GitHub&lt;/a&gt;. Furthermore, the investigation by &lt;a href=&quot;https://mobisec.com/&quot; title=&quot;https://mobisec.com/&quot;&gt;Mobisec&lt;/a&gt;, an Italian company which since 2017 certifies the mobile security of important companies, has further confirmed the particular attention to the issue of privacy.&lt;/p&gt;
&lt;p&gt;Mobisec’s study aimed at identifying security and privacy concerns highlighted an overall quality level above average&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Implementation was [also] carried out according to the best practices available at the state of the art and with the most modern development and Quality Assurance tools which makes Immuni an app actually above the quality that we often find in our daily security analysis activities, assessment and testing.” - Alberto Zannol CEO &amp;#x26; Founder of Mobisec&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Immuni is safe and should be used by anyone who wants to help fight the virus in the post lockdown phase. The Italian Government proved how it is possible, efficient, and secure for a government agency to develop with data security in mind. It has done so within the space of a couple of months and released an application to the entire population with minimal cost.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Dragonboard 410c Ethernet to Wi-Fi Access Point with VPN]]></title><description><![CDATA[How to set up a WiFi VPN Access Point using a Qualcomm Dragonboard 410c development board]]></description><link>https://www.danilo-delbusso.me/dragonboard-410-c-ethernet-to-wifi-vpn/</link><guid isPermaLink="false">https://www.danilo-delbusso.me/dragonboard-410-c-ethernet-to-wifi-vpn/</guid><pubDate>Wed, 24 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This set of commands and instructions are what I needed to do in order to set up a Wi-Fi access point on a Qualcomm Dragonboard 410c with a NordVPN connection.&lt;/p&gt;
&lt;p&gt;Please read the disclaimers and list of items needed at the bottom of the page.&lt;/p&gt;
&lt;p&gt;I will use &lt;a href=&quot;https://www.nano-editor.org/&quot;&gt;nano&lt;/a&gt; throughout this tutorial but you can obviously follow along with your favourite editor.&lt;/p&gt;
&lt;h1&gt;Create Access Point&lt;/h1&gt;
&lt;h2&gt;0. Before starting&lt;/h2&gt;
&lt;p&gt;You will need to connect the ethernet connection to the board using the adapter.
Once you have successfully connected run the command:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;ip&lt;/span&gt; a&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and look for the names of the ethernet to usb, and the wifi adapter.&lt;/p&gt;
&lt;p&gt;Look in the &lt;strong&gt;&lt;em&gt;“Adapter Names”&lt;/em&gt;&lt;/strong&gt; section of the appendix for more information.&lt;/p&gt;
&lt;p&gt;From now on, I will be referring to the ethernet adapter as &lt;strong&gt;&lt;em&gt;eth0&lt;/em&gt;&lt;/strong&gt; and to the wifi one as &lt;strong&gt;&lt;em&gt;wlan0&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;1. First steps&lt;/h2&gt;
&lt;p&gt;After flashing the firmware, you will need to install a few relevant packages.
Run the commands:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; update
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; upgrade
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; hostapd dnsmasq dhcpcd5 iptables iw rfkill bridge-utils
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; openvpn -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;now, stop the &lt;code class=&quot;language-text&quot;&gt;hostapd&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;dnsmasq&lt;/code&gt; processes by running:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; systemctl stop hostapd
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; systemctl stop dnsmasq&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2.DHCPCD configuration&lt;/h2&gt;
&lt;p&gt;We now need to modify our &lt;code class=&quot;language-text&quot;&gt;dhcpcd&lt;/code&gt; configuration. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/dhcpcd.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and add this to the bottom:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;interface wlan0
    static &lt;span class=&quot;token assign-left variable&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;192.168&lt;/span&gt;.220.1/24
    nohook wpa_supplicant&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;save the file and restart the &lt;code class=&quot;language-text&quot;&gt;dhcpcd&lt;/code&gt; service:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; systemctl restart dhcpcd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;I have noticed that this step, though crucial to the successfull configuration, will not allow you to use SSH to connect to the dragonboard. It will also block you from accessing the internet from the board. This step can also be done at the end so you can skip it for now.&lt;/p&gt;
&lt;h2&gt;3. Hostapd setup&lt;/h2&gt;
&lt;p&gt;We will need to create a hostapad configuration.&lt;/p&gt;
&lt;p&gt;Create a new file at this location:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/hostapd/hostapd.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and add this text.
&lt;strong&gt;FOR YOUR OWN SECURITY CHANGE THE ssid= AND wpa_passphrase= FIELDS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;wlan0
&lt;span class=&quot;token assign-left variable&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;nl80211

&lt;span class=&quot;token assign-left variable&quot;&gt;hw_mode&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;g
&lt;span class=&quot;token assign-left variable&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;ieee80211n&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;wmm_enabled&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;macaddr_acl&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;ignore_broadcast_ssid&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;token assign-left variable&quot;&gt;auth_algs&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;wpa&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;wpa_key_mgmt&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;WPA-PSK
&lt;span class=&quot;token assign-left variable&quot;&gt;wpa_pairwise&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;TKIP
&lt;span class=&quot;token assign-left variable&quot;&gt;rsn_pairwise&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;CCMP

&lt;span class=&quot;token comment&quot;&gt;# This is the name of the network&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;Essos
&lt;span class=&quot;token comment&quot;&gt;# The network passphrase&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;wpa_passphrase&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;ValarMorghulis&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then, edit the file at:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/default/hostapd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;by subtituting the line&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#DAEMON_CONF=&quot;&quot; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;DAEMON_CONF&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/etc/hostapd/hostapd.conf&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;notice we have deleted the &lt;code class=&quot;language-text&quot;&gt;#&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Save the file and do the same but for another file.
This time, edit the file&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/init.d/hostapd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and replace&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;DAEMON_CONF&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;DAEMON_CONF&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/etc/hostapd/hostapd.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;4. dnsmasq setup&lt;/h2&gt;
&lt;p&gt;We rename the current configuration file by running the command&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; /etc/dnsmasq.conf /etc/dnsmasq.conf.orig&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then we open:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/dnsmasq.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and add the following lines:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;wlan0       &lt;span class=&quot;token comment&quot;&gt;# Use interface wlan0  &lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1.1&lt;/span&gt;.1.1       &lt;span class=&quot;token comment&quot;&gt;# Use Cloudflare DNS  &lt;/span&gt;
dhcp-range&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;192.168&lt;/span&gt;.220.50,192.168.220.150,12h &lt;span class=&quot;token comment&quot;&gt;# IP range and lease time &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;save the file.&lt;/p&gt;
&lt;h2&gt;5. Forwarding traffic&lt;/h2&gt;
&lt;p&gt;First, we enable it throught the &lt;strong&gt;&lt;em&gt;systctl.conf&lt;/em&gt;&lt;/strong&gt; file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/sysctl.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then remove the line&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#net.ipv4.ip_forward=1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and replace it with&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;net.ipv4.ip_forward&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to avoid rebooting to activate the changes we run:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; -c &lt;span class=&quot;token string&quot;&gt;&quot;echo 1 &gt; /proc/sys/net/ipv4/ip_forward&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Iptables&lt;/h3&gt;
&lt;p&gt;I had to follow &lt;a href=&quot;https://github.com/netblue30/firejail/issues/2232#issuecomment-436423748&quot;&gt;this comment on an iptables issue&lt;/a&gt;in order to run iptables on my dragonboard.&lt;/p&gt;
&lt;p&gt;It suggested to run&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; update-alternatives --set iptables /usr/sbin/iptables-legacy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in order to downgrade the iptables install to a version which supports the commands we will use&lt;/p&gt;
&lt;p&gt;Run the following command to add new rules to the iptable:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then save the rules&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; -c &lt;span class=&quot;token string&quot;&gt;&quot;iptables-save &gt; /etc/iptables.ipv4.nat&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and to make sure the settins are run when we boot edit the file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/rc.local&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;find&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and add in an empty line above “exit 0”&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;iptables-restore &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; /etc/iptables.ipv4.nat&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;save, start hostapd and dnsmasq, and reboot&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; hostapd start
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; dnsmasq start
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;reboot&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Create VPN Access Point&lt;/h1&gt;
&lt;h2&gt;1. OpenVPN setup&lt;/h2&gt;
&lt;p&gt;I will be showing the setup for a NordVPN account, for VyprVPN, go to the original RaspberryPi tutorial &lt;a href=&quot;https://pimylifeup.com/raspberry-pi-vpn-access-point/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Authentication file&lt;/h3&gt;
&lt;p&gt;go to&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; /etc/openvpn&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and create a new file&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/openvpn/auth.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Insert NordVPN’s email and password on two separate and adjacent lines, like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;email
password&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Get the OpenVPN files&lt;/h3&gt;
&lt;p&gt;go at the location&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; /etc/openvpn&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the &lt;a href=&quot;https://nordvpn.com/ovpn/&quot;&gt;ovpn section on the NordVPN website&lt;/a&gt;.
Find the server you need, right click on the &lt;strong&gt;&lt;em&gt;“Download UDP”&lt;/em&gt;&lt;/strong&gt; button and copy the link by pressing &lt;strong&gt;&lt;em&gt;“Copy Link Address”&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;paste the link address in this command&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;INSERT_LINK_HERE&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I have chosen the &lt;strong&gt;&lt;em&gt;it91&lt;/em&gt;&lt;/strong&gt; server. Change the next commands by substituing &lt;strong&gt;&lt;em&gt;it91&lt;/em&gt;&lt;/strong&gt; with your chosen server.&lt;/p&gt;
&lt;p&gt;In order to make the rest of the tutorial slightly easier, rename the file you just downloaded. Also, we need to change the extension from .ovpn to .conf.&lt;/p&gt;
&lt;p&gt;The file I downloaded is named &lt;strong&gt;&lt;em&gt;it91.nordvpn.com.udp1194.ovpn&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I change its name by executing:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; it91.nordvpn.com.udp1194.ovpn it91.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Setting up the VPN&lt;/h2&gt;
&lt;p&gt;Change the content of the newly renamed&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; it91.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;by deleting the line&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;auth-user-pass&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and replacing it with&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;auth-user-pass auth.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;save the file.&lt;/p&gt;
&lt;p&gt;Now to automatically connect to this server on startup we modify the file&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/default/openvpn&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;by replacing the line&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#autostart=&quot;all&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;autostart&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;it91&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Iptables setup&lt;/h2&gt;
&lt;p&gt;We need to flush our current iptables&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; iptables -F
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; iptables -t nat -F
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; iptables -X&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then install our new iptables&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then overwrite the old rules from the tutorial without VPN&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; -c &lt;span class=&quot;token string&quot;&gt;&quot;iptables-save &gt; /etc/iptables.ipv4.nat&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Create Bridge&lt;/h2&gt;
&lt;p&gt;The last step requires us to create a bridge between the ethernet and wifi ports.
We can do this by editing the file&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/network/interfaces&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and adding the following lines:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;auto br0

iface br0 inet dhcp

bridge-ports eth0 wlan0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then we run the following two commands&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; network-manager stop

&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; rfkill unblock wlan&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and we bring up the bridge &lt;strong&gt;&lt;em&gt;br0&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ifup&lt;/span&gt; br0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and run our hostapd configuration by running&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; /etc/init.d/hostapd restart&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;finally, reboot the device&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;reboot&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Appendix&lt;/h1&gt;
&lt;h2&gt;The host machine I used:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Operating System: Manjaro Linux &lt;/li&gt;
&lt;li&gt;KDE Plasma Version: 5.15.1&lt;/li&gt;
&lt;li&gt;KDE Frameworks Version: 5.55.0&lt;/li&gt;
&lt;li&gt;Qt Version: 5.12.1&lt;/li&gt;
&lt;li&gt;Kernel Version: 4.19.24-1-MANJARO&lt;/li&gt;
&lt;li&gt;OS Type: 64-bit&lt;/li&gt;
&lt;li&gt;Processors: 8 × Intel® Core™ i7-7700HQ CPU @ 2.80GHz&lt;/li&gt;
&lt;li&gt;Memory: 15.6 GiB of RAM&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Adapter Names&lt;/h2&gt;
&lt;p&gt;In my case, after running the
&lt;code class=&quot;language-text&quot;&gt;ip a&lt;/code&gt; command (you could also run &lt;code class=&quot;language-text&quot;&gt;sudo ifconfig&lt;/code&gt;, though it is deprecated at the time of writing this tutorial) I obtained something on the lines of this result:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;: lo: &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;LOOPBACK,UP,LOWER_UP&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; mtu &lt;span class=&quot;token number&quot;&gt;65536&lt;/span&gt; qdisc noqueue state UNKNOWN group default qlen &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet &lt;span class=&quot;token number&quot;&gt;127.0&lt;/span&gt;.0.1/8 scope &lt;span class=&quot;token function&quot;&gt;host&lt;/span&gt; lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope &lt;span class=&quot;token function&quot;&gt;host&lt;/span&gt; 
       valid_lft forever preferred_lft forever
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;: enx008e8a8d9465: &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;NO-CARRIER,BROADCAST,MULTICAST,UP&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; mtu &lt;span class=&quot;token number&quot;&gt;1500&lt;/span&gt; qdisc fq_codel state DOWN group default qlen &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;
    link/ether &lt;span class=&quot;token number&quot;&gt;88&lt;/span&gt;:d7:f6:1f:28:c9 brd ff:ff:ff:ff:ff:ff
&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;: wlan0: &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;BROADCAST,MULTICAST,UP,LOWER_UP&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; mtu &lt;span class=&quot;token number&quot;&gt;1500&lt;/span&gt; qdisc mq state UP group default qlen &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;
    link/ether f0:03:8c:ab:dc:89 brd ff:ff:ff:ff:ff:ff
    inet &lt;span class=&quot;token number&quot;&gt;192.168&lt;/span&gt;.1.192/24 brd &lt;span class=&quot;token number&quot;&gt;192.168&lt;/span&gt;.1.255 scope global dynamic noprefixroute wlp3s0
       valid_lft 20331sec preferred_lft 20331sec
    inet6 fe80::aee5:8162:f8c9:f2ea/64 scope &lt;span class=&quot;token function&quot;&gt;link&lt;/span&gt; noprefixroute 
       valid_lft forever preferred_lft forever&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We ignore the &lt;code class=&quot;language-text&quot;&gt;lo&lt;/code&gt; and we notice that the wifi adapter is named &lt;strong&gt;&lt;em&gt;wlan0&lt;/em&gt;&lt;/strong&gt; and the ethernet to usb one is named &lt;strong&gt;&lt;em&gt;enx008e8a8d9465&lt;/em&gt;&lt;/strong&gt;. Names are usually similar and easily spotted, especially if you run a clean install of Debian as I sugges you do. In that case, you should only see three results and it will be easy to spot which ones are the ones you need.&lt;/p&gt;
&lt;h3&gt;DISCLAIMERS&lt;/h3&gt;
&lt;p&gt;🚨&lt;strong&gt;THESE STEPS ARE THE ONES THAT WORKED FOR ME, I TAKE NO REPONSIBILITY IF ANYTHING DOES NOT GO AS PLANNED OR YOUR DEVICE/S ARE DAMAGED IN ANY WAY&lt;/strong&gt;🚨&lt;/p&gt;
&lt;h4&gt;Hardware&lt;/h4&gt;
&lt;p&gt;In order to reproduce the steps I made you will need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A host machine (I used my laptop, specs in the Appendix section)&lt;/li&gt;
&lt;li&gt;A Qualcomm Dragonboard 410c&lt;/li&gt;
&lt;li&gt;USB to microUSB cable&lt;/li&gt;
&lt;li&gt;A NordVPN or VyprVPN account&lt;/li&gt;
&lt;li&gt;Ethernet to USB adapter&lt;/li&gt;
&lt;li&gt;USB Mouse and/or keyboard (not required to perform flash)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HDMI Monitor with full size HDMI cable (not required to perform flash)&lt;/p&gt;
&lt;h4&gt;Dragonboard Firmware&lt;/h4&gt;
&lt;p&gt;I suggest using Debian as it is the easiest to install and has the most support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.96boards.org/documentation/consumer/dragonboard/dragonboard410c/downloads/debian.md.html&quot;&gt;Download Page&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.96boards.org/documentation/consumer/dragonboard/dragonboard410c/downloads/debian.md.html&quot;&gt;Installation instructions using a Linux host machine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to write this post, I combined these tutorials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pimylifeup.com/raspberry-pi-wireless-access-point/&quot;&gt;Raspberry-Pi Access Point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pimylifeup.com/raspberry-pi-vpn-access-point/&quot;&gt;Raspberry-Pi VPN Access Point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://trisquel.info/en/wiki/make-bridge-ethernet-wifi&quot;&gt;Make a bridge Ethernet to WIFI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>